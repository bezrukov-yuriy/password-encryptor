(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const d of r.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function c(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(t){if(t.ep)return;t.ep=!0;const r=c(t);fetch(t.href,r)}})();function i(){return document.querySelector(".secretKey")?.value}document.addEventListener("DOMContentLoaded",function(){const n=document.getElementById("fileInput"),e=document.getElementById("openFileButton"),c=document.getElementById("fileContents");e?.addEventListener("click",function(){n?.click()}),n?.addEventListener("change",function(o){const t=o.target.files[0];if(t){const r=new FileReader;r.onload=function(d){const u=JSON.parse(d.target.result);document.querySelector(".secretKey").disabled=!0,f(u)},r.onerror=function(){c.textContent="Error: Could not read file."},r.readAsText(t)}else c.textContent="No file selected."})});function a(n,e){const c="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(n)),o=document.createElement("a");o.href=c,o.download=`${e}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o)}document.querySelector("#saveFile")?.addEventListener("click",()=>{const n=new Array(document.querySelector(".row")).map(e=>({title:l(e?.querySelector(".title")?.value??"",i()),password:l(e?.querySelector(".password")?.value??"",i())}));a(n,"data-file-"+new Date().toISOString())});function f(n){let e=n.map(c=>({title:s(c.title,i()),password:s(c.password,i())}));p(e)}function l(n,e){return CryptoJS.AES.encrypt(n,e).toString()}function s(n,e){return CryptoJS.AES.decrypt(n,e).toString(CryptoJS.enc.Utf8)}function p(n){const e=document.createElement("div");n.forEach(({title:c,password:o})=>{e.appendChild(m(c,o))}),document.querySelector(".content")?.appendChild(e)}function m(n,e){const o=document.getElementById("row-data").content.cloneNode(!0);return o.querySelector(".title").value=n,o.querySelector(".password").value=e,o}
